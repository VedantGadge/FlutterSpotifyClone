import 'package:flutter/material.dart';
import 'package:palette_generator/palette_generator.dart';

class AlbumView extends StatefulWidget {
  final String title;
  final String imageUrl;
  final String song1Url;
  final String song2Url;
  final String song3Url;
  final String albumDesc;
  final String song1imageUrl;
  final String song2imageUrl;
  final String song3imageUrl;
  final String song1name;
  final String song1singers;
  final String song2name;
  final String song2singers;
  final String song3name;
  final String song3singers;

  const AlbumView({
    Key? key,
    required this.title,
    required this.imageUrl,
    required this.song1Url,
    required this.song2Url,
    required this.song3Url,
    required this.albumDesc,
    required this.song1imageUrl,
    required this.song2imageUrl,
    required this.song3imageUrl,
    required this.song1name,
    required this.song1singers,
    required this.song2name,
    required this.song2singers,
    required this.song3name,
    required this.song3singers,
  }) : super(key: key);

  @override
  _AlbumViewState createState() => _AlbumViewState();
}

class _AlbumViewState extends State<AlbumView> {
  late ScrollController scrollController;
  double imageSize = 0;
  double initialSize = 240;
  double containerHeight = 500;
  double containerinitalHeight = 500;
  double imageOpacity = 1;
  bool showTopBar = false;
  late PaletteGenerator _paletteGenerator;
  bool _isLoading = true;
  Color? _backgroundColor;

  @override
  void initState() {
    imageSize = initialSize;
    scrollController = ScrollController()
      ..addListener(() {
        imageSize = initialSize - scrollController.offset;
        if (imageSize < 0) {
          imageSize = 0;
        }
        containerHeight = containerinitalHeight - scrollController.offset;
        if (containerHeight < 0) {
          containerHeight = 0;
        }
        imageOpacity = imageSize / initialSize;
        if (scrollController.offset > 224) {
          showTopBar = true;
        } else {
          showTopBar = false;
        }
        print(scrollController.offset);
        setState(() {});
      });
    super.initState();
    _loadPalette();
  }

  Future<void> _loadPalette() async {
    final imageProvider = NetworkImage(widget.imageUrl);
    _paletteGenerator = await PaletteGenerator.fromImageProvider(imageProvider);
    setState(() {
      _backgroundColor = _paletteGenerator.dominantColor?.color;
      _isLoading = false;
    });
  }

  @override
  Widget build(BuildContext context) {
    return ScrollConfiguration(
      behavior: NoGlowScrollBehavior(), // Disable overscroll glow effect
      child: Scaffold(
        body: SingleChildScrollView(
          physics:
              const ClampingScrollPhysics(), // Disable bouncing scroll effect
          child: Stack(
            children: [
              SafeArea(
                child: SingleChildScrollView(
                  controller: scrollController,
                  physics: const BouncingScrollPhysics(),
                  child: Container(
                    width: MediaQuery.of(context).size.width,
                    height: 1200,
                    decoration: BoxDecoration(
                      gradient: LinearGradient(
                        colors: [
                          _backgroundColor ?? Colors.black,
                          Colors.black,
                        ],
                        stops: const [0.25, 1],
                        begin: Alignment.topCenter,
                        end: Alignment.center,
                      ),
                    ),
                  ),
                ),
              ),
              Container(
                height: 700,
                child: SingleChildScrollView(
                  child: Column(
                    children: [
                      AppBar(
                        title: Text(
                          widget.title,
                          style: const TextStyle(
                            color: Colors.white,
                            fontSize: 20,
                          ),
                        ),
                        backgroundColor: _backgroundColor != null
                            ? Colors.transparent
                            : Colors.transparent,
                        leading: IconButton(
                          onPressed: () {
                            Navigator.pop(context);
                          },
                          icon: const Icon(Icons.arrow_back_ios_new_sharp),
                        ),
                        elevation: 0,
                      ),
                      Container(
                        height: 500,
                        child: Center(
                          child: _isLoading
                              ? const CircularProgressIndicator()
                              : Column(
                                  children: [
                                    Container(
                                      padding: const EdgeInsets.only(top: 60),
                                      child: Container(
                                        decoration: BoxDecoration(
                                          boxShadow: [
                                            BoxShadow(
                                              blurRadius: 10,
                                              spreadRadius: 2,
                                              color:
                                                  Colors.black.withOpacity(0.8),
                                            ),
                                          ],
                                        ),
                                        child: Image.network(
                                          widget.imageUrl,
                                          height: 250,
                                          width: 250,
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                        ),
                      )
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class NoGlowScrollBehavior extends ScrollBehavior {
  @override
  Widget buildOverscrollIndicator(
      BuildContext context, Widget child, ScrollableDetails details) {
    return child;
  }
}
